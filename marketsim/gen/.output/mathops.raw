def const(x = 1.0) : Float

/** Exponent of x
  *
  */
@python.mathops("Log/Pow", "exp", "e^{%(x)s}")
def Exp(x = const(1.0)) : Float

/** Natural logarithm of x (to base e)
 *
 */
@python.mathops("Log/Pow", "log", "log(%(x)s)")
def Log(x = const(1.0)) : Float

/** Square root of x
 *
 */
@python.mathops("Log/Pow", "sqrt", "\\sqrt{%(x)s}")
def Sqrt(x = 1.0) : Float

/** Return *x* raised to the power *y*.
  *
  * Exceptional cases follow Annex F of the C99 standard as far as possible.
  * In particular, ``pow(1.0, x)`` and ``pow(x, 0.0)`` always return 1.0,
  * even when *x* is a zero or a NaN.
  * If both *x* and *y* are finite, *x* is negative, and *y* is not an integer then
  * ``pow(x, y)`` is undefined, and raises ``ValueError``.
  */
@python.mathops("Log/Pow", "pow", "%(base)s^{%(power)s}")
def Pow(base = 1.0, power = 1.0) : Float

/** Arc tangent of x, in radians.
 *
 */
@python.mathops("Trigonometric", "atan", "atan(%(x)s)")
def Atan(x = 0.0) : Float
 ->
Definitions:
- List:
| - FunDef:
| | - const
| | - List:
| | | - Parameter:
| | | | - x
| | | | - None
| | | | - Some:
| | | | | - Const:
| | | | | | - 1.0
| | | | - List:
| | - None
| | - Some:
| | | - SimpleType:
| | | | - Float
| | - None
| | - List:
| - FunDef:
| | - Exp
| | - List:
| | | - Parameter:
| | | | - x
| | | | - None
| | | | - Some:
| | | | | - FunCall:
| | | | | | - QualifiedName:
| | | | | | | - List:
| | | | | | | | - const
| | | | | | - List:
| | | | | | | - Const:
| | | | | | | | - 1.0
| | | | - List:
| | - None
| | - Some:
| | | - SimpleType:
| | | | - Float
| | - Some:
| | | - DocString:
| | | | - Exponent of x
| | | | - 
| | - List:
| | | - Annotation:
| | | | - QualifiedName:
| | | | | - List:
| | | | | | - python
| | | | | | - mathops
| | | | - List:
| | | | | - Log/Pow
| | | | | - exp
| | | | | - e^{%(x)s}
| - FunDef:
| | - Log
| | - List:
| | | - Parameter:
| | | | - x
| | | | - None
| | | | - Some:
| | | | | - FunCall:
| | | | | | - QualifiedName:
| | | | | | | - List:
| | | | | | | | - const
| | | | | | - List:
| | | | | | | - Const:
| | | | | | | | - 1.0
| | | | - List:
| | - None
| | - Some:
| | | - SimpleType:
| | | | - Float
| | - Some:
| | | - DocString:
| | | | - Natural logarithm of x (to base e)
| | | | - 
| | - List:
| | | - Annotation:
| | | | - QualifiedName:
| | | | | - List:
| | | | | | - python
| | | | | | - mathops
| | | | - List:
| | | | | - Log/Pow
| | | | | - log
| | | | | - log(%(x)s)
| - FunDef:
| | - Sqrt
| | - List:
| | | - Parameter:
| | | | - x
| | | | - None
| | | | - Some:
| | | | | - Const:
| | | | | | - 1.0
| | | | - List:
| | - None
| | - Some:
| | | - SimpleType:
| | | | - Float
| | - Some:
| | | - DocString:
| | | | - Square root of x
| | | | - 
| | - List:
| | | - Annotation:
| | | | - QualifiedName:
| | | | | - List:
| | | | | | - python
| | | | | | - mathops
| | | | - List:
| | | | | - Log/Pow
| | | | | - sqrt
| | | | | - \\sqrt{%(x)s}
| - FunDef:
| | - Pow
| | - List:
| | | - Parameter:
| | | | - base
| | | | - None
| | | | - Some:
| | | | | - Const:
| | | | | | - 1.0
| | | | - List:
| | | - Parameter:
| | | | - power
| | | | - None
| | | | - Some:
| | | | | - Const:
| | | | | | - 1.0
| | | | - List:
| | - None
| | - Some:
| | | - SimpleType:
| | | | - Float
| | - Some:
| | | - DocString:
| | | | - Return *x* raised to the power *y*.
| | | | - 
| | | | |  Exceptional cases follow Annex F of the C99 standard as far as possible.
| | | | |  In particular, ``pow(1.0, x)`` and ``pow(x, 0.0)`` always return 1.0,
| | | | |  even when *x* is a zero or a NaN.
| | | | |  If both *x* and *y* are finite, *x* is negative, and *y* is not an integer then
| | | | |  ``pow(x, y)`` is undefined, and raises ``ValueError``.
| | - List:
| | | - Annotation:
| | | | - QualifiedName:
| | | | | - List:
| | | | | | - python
| | | | | | - mathops
| | | | - List:
| | | | | - Log/Pow
| | | | | - pow
| | | | | - %(base)s^{%(power)s}
| - FunDef:
| | - Atan
| | - List:
| | | - Parameter:
| | | | - x
| | | | - None
| | | | - Some:
| | | | | - Const:
| | | | | | - 0.0
| | | | - List:
| | - None
| | - Some:
| | | - SimpleType:
| | | | - Float
| | - Some:
| | | - DocString:
| | | | - Arc tangent of x, in radians.
| | | | - 
| | - List:
| | | - Annotation:
| | | | - QualifiedName:
| | | | | - List:
| | | | | | - python
| | | | | | - mathops
| | | | - List:
| | | | | - Trigonometric
| | | | | - atan
| | | | | - atan(%(x)s)
